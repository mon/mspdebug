#include <stdint.h>

// all our devices have at least 0x09FF to 0x0200 (2KB) in the same place
#define FLASH_CODE_RAM_START 0x0200
#define FLASH_CODE_RAM_LEN   2048

#define FLASH_CODE_START 0x00000208

static uint8_t flash_code_blob[] = {
    0xb2, 0x40, 0x6b, 0xa5, 0x2a, 0x01, 0x92, 0xb3, 0x2c, 0x01, 0xfd, 0x23, 0x82, 0x93, 0x00, 0x02,
    0x06, 0x20, 0x82, 0x93, 0x02, 0x02, 0x03, 0x20, 0x82, 0x93, 0x04, 0x02, 0xf7, 0x27, 0xb2, 0x40,
    0x00, 0xa5, 0x2c, 0x01, 0x82, 0x93, 0x00, 0x02, 0x35, 0x24, 0x3e, 0x40, 0x3f, 0x00, 0x1e, 0xf2,
    0x04, 0x02, 0x3f, 0x40, 0x40, 0x00, 0x0f, 0x8e, 0x12, 0xc3, 0x0f, 0x10, 0x82, 0x4f, 0x06, 0x02,
    0x92, 0x92, 0x06, 0x02, 0x00, 0x02, 0x03, 0x2c, 0x92, 0x42, 0x00, 0x02, 0x06, 0x02, 0xb2, 0x40,
    0xc0, 0xa5, 0x28, 0x01, 0x82, 0x93, 0x06, 0x02, 0x07, 0x20, 0xb2, 0x40, 0x40, 0xa5, 0x28, 0x01,
    0x92, 0xb3, 0x2c, 0x01, 0xdf, 0x27, 0xfc, 0x3f, 0x1d, 0x42, 0x02, 0x02, 0x0f, 0x4d, 0x2f, 0x53,
    0x82, 0x4f, 0x02, 0x02, 0x1e, 0x42, 0x04, 0x02, 0x0f, 0x4e, 0x2f, 0x53, 0x82, 0x4f, 0x04, 0x02,
    0xae, 0x4d, 0x00, 0x00, 0xb2, 0xb2, 0x2c, 0x01, 0xfd, 0x27, 0x92, 0x83, 0x00, 0x02, 0x92, 0x83,
    0x06, 0x02, 0xe0, 0x3f, 0xb2, 0x40, 0x00, 0xa5, 0x28, 0x01, 0xb2, 0x40, 0x10, 0xa5, 0x2c, 0x01,
    0x82, 0x43, 0x02, 0x02, 0x82, 0x43, 0x04, 0x02, 0x82, 0x43, 0x00, 0x02, 0xff, 0x3f, 0x03, 0x43,
};

// where to start writing the code
#define FLASH_CODE_BLOCK_START (FLASH_CODE_START + sizeof(flash_code_blob))
// how much data we can write in a single block
#define FLASH_CODE_BLOCK_LEN ((FLASH_CODE_RAM_START + FLASH_CODE_RAM_LEN) - FLASH_CODE_BLOCK_START)

#define FLASH_CODE_PREAMBLE_LEN (FLASH_CODE_BLOCK_START - FLASH_CODE_RAM_START)

_Static_assert(FLASH_CODE_BLOCK_LEN % 2 == 0, "Block len is unaligned");

typedef struct __attribute__((packed, aligned(2))) {
    // sync with onchip.c and MAKE SURE to swap pointers for raw uints
    uint16_t wrtLen; // WORDS NOT BYTES
    uint16_t pSrc;
    uint16_t pDst;
    uint16_t wrtLenThis;
} flash_code_header_t;

_Static_assert(
    sizeof(flash_code_header_t) == (FLASH_CODE_START - FLASH_CODE_RAM_START),
    "flash_code_header_t has an unexpected size");
